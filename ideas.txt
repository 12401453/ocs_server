When it comes to nominal and verbal morphology-tags, all that really matters for the purposes of producing paradigms is the row-number computed from them which the autoreconstructor uses; I could just pre-compute this and have it as a numerical entry in the table for each word. If I want to replicate what TOROT does in terms of lsiting the morphological categories of each word then I might need more though.

Could have a function to show the paradigm of any word with a switch between showing only attested forms and the full generated paradigm

Maybe a 3-way switch at the top that changes the whole front-end behaviour and displayable annotations between phonlogy-morphology-syntax (if it's worth me dealing with the syntax-bullshit at all)

I need an LCS lemmas table which has columns for both the TOROT OCS and TOROT Old Russian forms of each lemma
    - For now, limit it to the OCS lemmas and include an LCS column that may be blank, my inflection-class, and maybe a root-column which I can base Autoreconstructions off.
Don't need a POS field in the main text if I have it in the lemma-table

The inflection-class needs to stored as an integer in the table and I should use numbers: 0 = non-inflecting, < 200 = nouns, > 200 = verbs.
In a separate table I can store sensible English names for all the inflection-classes with their numerical keys. Probably should also group inflection-class numbers together so that, e.g. all a-stems are identifiable, all o-stems, all masculines etc. etc.

I could use the extreme-cleaned Cyrillic version as something to base search off (i.e. extreme clean the search-terms as well)


Some of the Vitas in Suprasliensis are too long for me to want to display on one page (since loading-times will scale linearly with the amount of words, given how much auxiliary information I will be getting the server to wrap each word in), so my pagination-strategy will have to be: only display the page-number widget at the bottom if a sub-text is over a certain number of sentences: if it is then just display a page-number widget for that sub-text; the idea that we could have a page-number browser for the whole manuscript doesnt really work because then different sub-texts will end up getting displayed on the same page and I don't know what I'd make the subtext-dropdown menu display in cases like that. If you want a different sub-text you have to use the dropdown, and if a subtext is too long you can navigate around in it using the page-numbers.

for some reason only 30 sentences get displayed on pg.1 of texts but subsequent pages have 31 sentences; it must be a bug in how the page_nos_arr array is built, but it isn't really very important
