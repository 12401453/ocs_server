<!DOCTYPE html> 
<html>

<head>
  

<link href="style.css" rel="stylesheet" media="all and (min-width: 769px)" type="text/css">
<link href="style_small_screen.css" rel="stylesheet" media="all and (max-width: 769px)" type="text/css">
<link rel="stylesheet" type="text/css" href="lemma_set_unexplicit.css" id="lemma_set_style">
<!--<link rel="stylesheet" type="text/css" href="flexbox.css" id="flexbox_styles">-->
<link href="dict.css" rel="stylesheet" type="text/css">
<link href="dict_small_screens.css" rel="stylesheet" media="all and (max-width: 768px)" type="text/css">
<link id="colour_theme" href="dark_theme.css" rel="stylesheet" type="text/css">

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1">


</head>

<body>
  <br>
<div id="main_box">
<div id="toplinks-flexbox"> 
  <div id="texts_link" class="toplink-buttons current">Texts</div>
  <a href="words"><div id="words_link" class="toplink-buttons">Words</div></a>
  <div id="topbar_placefiller"></div>
  <img id="theme_switcher" src="moon-stars.svg" title="Switch to light theme" draggable="false"></img>
  <!--<div id="other_link" class="toplink-buttons">Other shit</div> -->
</div>
<script>document.getElementById("toplinks-flexbox").addEventListener('click', (event) => { 
  if(event.target.className == "toplink-buttons") {
    document.querySelector(".toplink-buttons.current").classList.remove("current"); 
    event.target.classList.add("current");
  }
}
);</script>

<div id="main_text">
  
  
  <div id="text_labels_box">
    <div id="textselect_box">
      <select id="textselect" name="textselect" autocomplete="off" onchange="selectText()" style="width: 150px;">
        <?php ?>
      <!--</select>
    
      <select id="subtitle_select" name="chapselect" autocomplete="off">  
      </select> -->
    </div>
  </div>
  <br>
  <div id="annotation_mode_box">
    <div id="torot_mode" class="annotation_mode">TOROT</div>
    <div id="lcs_mode" class="annotation_mode">LCS</div> 
  </div>
  <div id="p1">
<?cky ?>
  </div>

</div>
</div>
<span id="spoofspan" style="display: inline;"></span>
<span id="spoofspan2"><span id="hidden_lemma_tag"></span></span>
<script src="functions.js"></script>
<script src="LCS_to_OCS.js"></script>
<script src="dict_class.js"></script>
</body>
</html>
<script>
  <?js ?>
const textselector = document.getElementById('textselect');
const subtitleselector = document.getElementById('subtitle_select');


const textselect_resize = (event) => {
  let dummyselect = document.createElement('select');
  let dummyoption = document.createElement('option');

  const clicked_select = event.target;
  dummyoption.textContent = clicked_select.options[event.target.selectedIndex].text;  //event.target is the <select> element; .options is a list of its options

  dummyselect.id = 'hidden_select';
  dummyselect.style.fontFamily = getComputedStyle(clicked_select)["font-family"];
  dummyselect.style.fontSize = getComputedStyle(clicked_select)["font-size"];
  dummyselect.style.padding = getComputedStyle(clicked_select)["padding"];
  dummyselect.appendChild(dummyoption);
  clicked_select.after(dummyselect);//.after('') inserts stuff directly after the entire element, i.e. after its </> closing tag
  
  const dummywidth = dummyselect.getBoundingClientRect().width;
  clicked_select.style.width = `${dummywidth}px`;
  
  dummyselect.remove();
};

textselector.addEventListener('input', textselect_resize);
textselector.addEventListener('cookie_selection', textselect_resize);
subtitleselector.addEventListener('input', textselect_resize);
subtitleselector.addEventListener('cookie_selection', textselect_resize);

subtitleselector.addEventListener('change', selectSubtitle);



window.onload = () => {
  textselector.dispatchEvent(new Event('cookie_selection'));
  subtitleselector.dispatchEvent(new Event('cookie_selection'));
};

// window.onload = () => {
//     if(cookie_textselect) {
//       let text_options = textselect.options;
//       let textid_deleted = true;
//       for(let i = 0; i < text_options.length; i++) {
//         if(text_options[i].value == cookie_textselect){
//             textid_deleted = false;
//             text_options[i].selected = true;
//             textselector.dispatchEvent(new Event('cookie_selection'));
//             //setLangId();
//             break;
//         }
//       }
//       if(textid_deleted == false) {
//       /*  let tt_btns = document.querySelectorAll('.tooltip');
//         tt_btns.forEach(tt_btn => {
//           tt_btn.onclick = showAnnotate;
//         });
//         document.querySelectorAll('.multiword').forEach(mw_btn => {
//             mw_btn.onclick = showMultiwordAnnotate;
//         }); */
//       } 
//       else console.log("cookie text has been deleted by another client");   
//     }
//     else console.log("no text_id cookie");
// };
const theme_urls = [["dark_theme.css", "moon-stars.svg", "Switch to light theme"], ["light_theme.css", "sun.svg", "Switch to dark theme"]];
let theme_counter = 1;
document.getElementById("theme_switcher").addEventListener('click', (event) =>  {
    document.getElementById("colour_theme").href = theme_urls[theme_counter % 2][0];
    document.getElementById("theme_switcher").src = theme_urls[theme_counter % 2][1];
    document.getElementById("theme_switcher").title = theme_urls[theme_counter % 2][2];
    theme_counter++;
});

</script>